* type decl
* type inference
* variant
* record
* mutable
* match
* function match
* compiler

---
今の実装では、import がeval 時にしか行われないので
infer 時にunknown になりそう。
eval じゃなくて infer の時にimport するか、
import だけは別処理にするとか。
import -> infer -> eval の順番とか。
---
C_ID のみのノードをつくるべきか。
いまは、198行目で、Unitを返している。

---
typeはposを持っていないので、
何行もあるrecordにエラー表示するときに先頭行になってしまう。
type parseの構文木も用意すべきだったか。。
(構文木の方にはposがあるので近い行でエラーが出せる）
---
文字列の連結は + のままでいいのだろうか。
Listの連結は？ @ ？ ++?
文字列の連結を ++ とか ^ とか
配列サポートはどうするか。[]はリスト
[< >] はださい。{ } って手も。
でも {}はDictとかに使いたい。
< > も？
< > をリストにして、[] を配列にするとか。
